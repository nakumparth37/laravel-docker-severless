name: Laravel-serverless CI/CD (Serverless + ECR + Lambda)

on:
  push:
    branches:
      - main  # default branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    steps:
      # -----------------------------
      # 1. Checkout Code
      # -----------------------------
      - name: Checkout Code
        uses: actions/checkout@v3

      # -----------------------------
      # 2. Set Up PHP
      # -----------------------------
      - name: Set Up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, bcmath, pdo, pdo_mysql
          coverage: none

      # -----------------------------
      # 3. Set Up Node.js
      # -----------------------------
      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # -----------------------------
      # 4. Configure AWS Credentials
      # -----------------------------
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Test AWS CLI
        run: aws sts get-caller-identity

      # -----------------------------
      # 5. Create .env file from Secrets
      # -----------------------------
      - name: Create .env
        run: |
          echo "APP_NAME=Serverless-App" >> .env
          echo "APP_ENV=production" >> .env
          echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env
          echo "APP_DEBUG=true" >> .env
          echo "APP_URL=https://7yrt6da7d7.execute-api.ap-south-1.amazonaws.com" >> .env
          echo "BASE_URL=https://7yrt6da7d7.execute-api.ap-south-1.amazonaws.com/" >> .env

          echo "LOG_CHANNEL=stderr" >> .env
          echo "LOG_LEVEL=info" >> .env

          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=laravel-dev-db.cvu4m8s04c94.ap-south-1.rds.amazonaws.com" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=laravel" >> .env
          echo "DB_USERNAME=laravel" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

          echo "QUEUE_CONNECTION=sqs" >> .env
          echo "SQS_PREFIX=https://sqs.ap-south-1.amazonaws.com/870968578789" >> .env
          echo "SQS_QUEUE=laravel-queue" >> .env

          echo "FILESYSTEM_DISK=s3" >> .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          echo "AWS_DEFAULT_REGION=ap-south-1" >> .env
          echo "AWS_BUCKET=laravel-dev-aws-storage" >> .env
          echo "AWS_USE_PATH_STYLE_ENDPOINT=false" >> .env
          echo "AWS_URL=https://laravel-dev-aws-storage.s3.amazonaws.com" >> .env

          echo "SESSION_DRIVER=cookie" >> .env
          echo "CACHE_DRIVER=file" >> .env

          echo "MAIL_MAILER=smtp" >> .env
          echo "MAIL_HOST=mail.mailtest.radixweb.net" >> .env
          echo "MAIL_PORT=587" >> .env
          echo "MAIL_USERNAME=testphp@mailtest.radixweb.net" >> .env
          echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env
          echo "MAIL_ENCRYPTION=null" >> .env
          echo "MAIL_FROM_ADDRESS=testmobile@mailtest.radixweb.net" >> .env
          echo "MAIL_FROM_NAME=Serverless-App" >> .env

          echo "GITHUB_CLIENT_ID=${{ secrets.OAUTH_GITHUB_CLIENT_ID }}" >> .env
          echo "GITHUB_CLIENT_SECRET=${{ secrets.OAUTH_GITHUB_CLIENT_SECRET }}" >> .env
          echo "OAUTH_REDIRECT_URL=https://7yrt6da7d7.execute-api.ap-south-1.amazonaws.com/login/github/callback" >> .env

          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "GOOGLE_REDIRECT=https://7yrt6da7d7.execute-api.ap-south-1.amazonaws.com/login/google/callback" >> .env

          echo "PAYPAL_MODE=sandbox" >> .env
          echo "PAYPAL_SANDBOX_CLIENT_ID=${{ secrets.PAYPAL_SANDBOX_CLIENT_ID }}" >> .env
          echo "PAYPAL_SANDBOX_CLIENT_SECRET=${{ secrets.PAYPAL_SANDBOX_CLIENT_SECRET }}" >> .env

          echo "PASSPORT_PERSONAL_ACCESS_CLIENT_ID=6" >> .env
          echo "PASSPORT_PERSONAL_ACCESS_CLIENT_SECRET=${{ secrets.PASSPORT_PERSONAL_ACCESS_CLIENT_SECRET }}" >> .env

      # -----------------------------
      # 6. Install Composer Dependencies
      # -----------------------------
      - name: Install Composer Dependencies
        run: composer install --no-dev --optimize-autoloader

      # -----------------------------
      # 7. Cache Laravel Config, Routes, Views
      # -----------------------------
      - name: Cache Laravel Config/Routes/Views
        run: |
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache

      # -----------------------------
      # 8. Install Serverless CLI
      # -----------------------------
      - name: Install Serverless CLI
        run: npm install -g serverless@4

      # -----------------------------
      # 9. Build and Push Docker Image to ECR
      # -----------------------------
      - name: Authenticate to ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name: Build Docker Image
        run: |
          IMAGE_NAME=${{ secrets.ECR_REGISTRY }}/lambda-compatible-image1:latest
          docker build -t $IMAGE_NAME -f deploy/lambda/Dockerfile .
          docker push $IMAGE_NAME

      # -----------------------------
      # 10. Deploy Lambda using Serverless
      # -----------------------------
      - name: Deploy Laravel to Lambda
        working-directory: ./deploy/lambda
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
        run: serverless deploy

      # -----------------------------
      # 11. Run Laravel Migrations via Lambda
      # -----------------------------
      - name: Run Migrations
        run: |
          serverless invoke -f artisan -d '{"command": "migrate --force"}'
